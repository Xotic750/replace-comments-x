{"version":3,"sources":["../src/replace-comments-x.js"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,aAAlB;AACA,OAAO,wBAAP,MAAqC,+BAArC;AACA,OAAO,SAAP,MAAsB,oBAAtB;AAEA,IAAM,YAAY,GAAG,EAArB;AACA,IAAM,cAAc,GAAG,kCAAvB;AACA,IAAM,iBAAiB,GAAG,SAAS,CAAC,YAAY,CAAC,OAAd,CAAnC;AAEA;;;;;;;;;;AASA,IAAM,eAAe,GAAG,SAAS,eAAT,CAAyB,MAAzB,EAAiC,WAAjC,EAA8C;AACpE,SAAO,iBAAiB,CACtB,wBAAwB,CAAC,MAAD,CADF,EAEtB,cAFsB,EAGtB,SAAS,CAAC,MAAV,GAAmB,CAAnB,GAAuB,KAAK,CAAC,WAAD,CAA5B,GAA4C,YAHtB,CAAxB;AAKD,CAND;;AAQA,eAAe,eAAf","file":"replace-comments-x.esm.js","sourcesContent":["import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return methodizedReplace(\n    requireCoercibleToString(string),\n    STRIP_COMMENTS,\n    arguments.length > 1 ? toStr(replacement) : EMPTY_STRING,\n  );\n};\n\nexport default replaceComments;\n"]}