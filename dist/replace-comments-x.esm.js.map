{"version":3,"sources":["../src/replace-comments-x.js"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,aAAlB;AACA,OAAO,wBAAP,MAAqC,+BAArC;AAEA,IAAM,YAAY,GAAG,EAArB;AACA,IAAM,cAAc,GAAG,kCAAvB;IACO,O,GAAW,Y,CAAX,O;AAEP;;;;;;;;;;AASA,IAAM,eAAe,GAAG,SAAS,eAAT,CAAyB,MAAzB,EAAiC,WAAjC,EAA8C;AACpE,SAAO,OAAO,CAAC,IAAR,CAAa,wBAAwB,CAAC,MAAD,CAArC,EAA+C,cAA/C,EAA+D,SAAS,CAAC,MAAV,GAAmB,CAAnB,GAAuB,KAAK,CAAC,WAAD,CAA5B,GAA4C,YAA3G,CAAP;AACD,CAFD;;AAIA,eAAe,eAAf","file":"replace-comments-x.esm.js","sourcesContent":["import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : EMPTY_STRING);\n};\n\nexport default replaceComments;\n"]}